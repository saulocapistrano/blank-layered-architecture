version: '3.8'

services:

  postgres-db:
    image: postgres:15-alpine
    container_name: blank_postgres_db
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: base_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - blank-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: blank_pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: user@blank.com
      PGADMIN_DEFAULT_PASSWORD: adminpassword
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "5050:80"
    depends_on:
      - postgres-db
    networks:
      - blank-network


  minio:
    image: minio/minio:latest
    container_name: blank_minio
    command: server /data --console-address :9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/ready" ]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - blank-network


  minio-setup:
    image: minio/mc:latest
    container_name: blank_minio_setup
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      sleep 5 &&
      mc alias set local http://minio:9000 minioadmin minioadmin &&
      mc mb local/blank-bucket || true &&
      echo 'MinIO configurado com o bucket blank-bucket';
      "
    restart: "no"
    networks:
      - blank-network

  app:
    build: .
    container_name: blank_app
    ports:
      - "8080:8080"
    environment:
      DB_URL: jdbc:postgresql://postgres-db:5432/base_db
      DB_USERNAME: postgres
      DB_PASSWORD: 123456
      S3_ACCESS_KEY: minioadmin
      S3_SECRET_KEY: minioadmin
      S3_ENDPOINT: http://minio:9000
    depends_on:
      - postgres-db
      - minio
    networks:
      - blank-network


volumes:
  postgres_data:
  minio_data:

networks:
  blank-network:
    driver: bridge